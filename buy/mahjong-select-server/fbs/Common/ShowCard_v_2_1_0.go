// automatically generated by the FlatBuffers compiler, do not modify

package Common

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type ShowCard_v_2_1_0 struct {
	_tab flatbuffers.Table
}

func GetRootAsShowCard_v_2_1_0(buf []byte, offset flatbuffers.UOffsetT) *ShowCard_v_2_1_0 {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &ShowCard_v_2_1_0{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *ShowCard_v_2_1_0) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ShowCard_v_2_1_0) OperationCode() byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetByte(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ShowCard_v_2_1_0) MutateOperationCode(n byte) bool {
	return rcv._tab.MutateByteSlot(4, n)
}

func (rcv *ShowCard_v_2_1_0) Tiles(j int) byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.GetByte(a + flatbuffers.UOffsetT(j*1))
	}
	return 0
}

func (rcv *ShowCard_v_2_1_0) TilesLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

func (rcv *ShowCard_v_2_1_0) TilesBytes() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *ShowCard_v_2_1_0) Target() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ShowCard_v_2_1_0) MutateTarget(n uint32) bool {
	return rcv._tab.MutateUint32Slot(8, n)
}

func (rcv *ShowCard_v_2_1_0) Responsibility() byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.GetByte(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ShowCard_v_2_1_0) MutateResponsibility(n byte) bool {
	return rcv._tab.MutateByteSlot(10, n)
}

func ShowCard_v_2_1_0Start(builder *flatbuffers.Builder) {
	builder.StartObject(4)
}
func ShowCard_v_2_1_0AddOperationCode(builder *flatbuffers.Builder, operationCode byte) {
	builder.PrependByteSlot(0, operationCode, 0)
}
func ShowCard_v_2_1_0AddTiles(builder *flatbuffers.Builder, tiles flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(tiles), 0)
}
func ShowCard_v_2_1_0StartTilesVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(1, numElems, 1)
}
func ShowCard_v_2_1_0AddTarget(builder *flatbuffers.Builder, target uint32) {
	builder.PrependUint32Slot(2, target, 0)
}
func ShowCard_v_2_1_0AddResponsibility(builder *flatbuffers.Builder, responsibility byte) {
	builder.PrependByteSlot(3, responsibility, 0)
}
func ShowCard_v_2_1_0End(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
