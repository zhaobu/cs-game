// automatically generated by the FlatBuffers compiler, do not modify

package Common

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type GameRestoreSectionPush struct {
	_tab flatbuffers.Table
}

func GetRootAsGameRestoreSectionPush(buf []byte, offset flatbuffers.UOffsetT) *GameRestoreSectionPush {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &GameRestoreSectionPush{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *GameRestoreSectionPush) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *GameRestoreSectionPush) DismissRemainTime() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *GameRestoreSectionPush) MutateDismissRemainTime(n uint32) bool {
	return rcv._tab.MutateUint32Slot(4, n)
}

func (rcv *GameRestoreSectionPush) DismissUsers(j int) uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.GetUint32(a + flatbuffers.UOffsetT(j*4))
	}
	return 0
}

func (rcv *GameRestoreSectionPush) DismissUsersLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

func (rcv *GameRestoreSectionPush) HostingUsers(j int) uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.GetUint32(a + flatbuffers.UOffsetT(j*4))
	}
	return 0
}

func (rcv *GameRestoreSectionPush) HostingUsersLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

func (rcv *GameRestoreSectionPush) OnlineUsers(j int) uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.GetUint32(a + flatbuffers.UOffsetT(j*4))
	}
	return 0
}

func (rcv *GameRestoreSectionPush) OnlineUsersLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

func (rcv *GameRestoreSectionPush) OperationList(obj *SeqOperation, j int) bool {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		x := rcv._tab.Vector(o)
		x += flatbuffers.UOffsetT(j) * 4
		x = rcv._tab.Indirect(x)
		if obj == nil {
			obj = new(SeqOperation)
		}
		obj.Init(rcv._tab.Bytes, x)
		return true
	}
	return false
}

func (rcv *GameRestoreSectionPush) OperationListLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

func (rcv *GameRestoreSectionPush) Step() uint16 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(14))
	if o != 0 {
		return rcv._tab.GetUint16(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *GameRestoreSectionPush) MutateStep(n uint16) bool {
	return rcv._tab.MutateUint16Slot(14, n)
}

func GameRestoreSectionPushStart(builder *flatbuffers.Builder) {
	builder.StartObject(6)
}
func GameRestoreSectionPushAddDismissRemainTime(builder *flatbuffers.Builder, dismissRemainTime uint32) {
	builder.PrependUint32Slot(0, dismissRemainTime, 0)
}
func GameRestoreSectionPushAddDismissUsers(builder *flatbuffers.Builder, dismissUsers flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(dismissUsers), 0)
}
func GameRestoreSectionPushStartDismissUsersVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(4, numElems, 4)
}
func GameRestoreSectionPushAddHostingUsers(builder *flatbuffers.Builder, hostingUsers flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(hostingUsers), 0)
}
func GameRestoreSectionPushStartHostingUsersVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(4, numElems, 4)
}
func GameRestoreSectionPushAddOnlineUsers(builder *flatbuffers.Builder, onlineUsers flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(3, flatbuffers.UOffsetT(onlineUsers), 0)
}
func GameRestoreSectionPushStartOnlineUsersVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(4, numElems, 4)
}
func GameRestoreSectionPushAddOperationList(builder *flatbuffers.Builder, operationList flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(4, flatbuffers.UOffsetT(operationList), 0)
}
func GameRestoreSectionPushStartOperationListVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(4, numElems, 4)
}
func GameRestoreSectionPushAddStep(builder *flatbuffers.Builder, step uint16) {
	builder.PrependUint16Slot(5, step, 0)
}
func GameRestoreSectionPushEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
