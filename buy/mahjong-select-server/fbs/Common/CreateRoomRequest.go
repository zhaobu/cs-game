// automatically generated by the FlatBuffers compiler, do not modify

package Common

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type CreateRoomRequest struct {
	_tab flatbuffers.Table
}

func GetRootAsCreateRoomRequest(buf []byte, offset flatbuffers.UOffsetT) *CreateRoomRequest {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &CreateRoomRequest{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *CreateRoomRequest) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *CreateRoomRequest) GameType() uint16 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetUint16(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *CreateRoomRequest) MutateGameType(n uint16) bool {
	return rcv._tab.MutateUint16Slot(4, n)
}

func (rcv *CreateRoomRequest) Round() byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetByte(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *CreateRoomRequest) MutateRound(n byte) bool {
	return rcv._tab.MutateByteSlot(6, n)
}

func (rcv *CreateRoomRequest) Setting(j int) byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.GetByte(a + flatbuffers.UOffsetT(j*1))
	}
	return 0
}

func (rcv *CreateRoomRequest) SettingLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

func (rcv *CreateRoomRequest) SettingBytes() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *CreateRoomRequest) ClubId() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *CreateRoomRequest) MutateClubId(n int32) bool {
	return rcv._tab.MutateInt32Slot(10, n)
}

func CreateRoomRequestStart(builder *flatbuffers.Builder) {
	builder.StartObject(4)
}
func CreateRoomRequestAddGameType(builder *flatbuffers.Builder, gameType uint16) {
	builder.PrependUint16Slot(0, gameType, 0)
}
func CreateRoomRequestAddRound(builder *flatbuffers.Builder, round byte) {
	builder.PrependByteSlot(1, round, 0)
}
func CreateRoomRequestAddSetting(builder *flatbuffers.Builder, setting flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(setting), 0)
}
func CreateRoomRequestStartSettingVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(1, numElems, 1)
}
func CreateRoomRequestAddClubId(builder *flatbuffers.Builder, clubId int32) {
	builder.PrependInt32Slot(3, clubId, 0)
}
func CreateRoomRequestEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
