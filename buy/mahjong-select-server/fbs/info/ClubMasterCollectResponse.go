// automatically generated by the FlatBuffers compiler, do not modify

package info

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type ClubMasterCollectResponse struct {
	_tab flatbuffers.Table
}

func GetRootAsClubMasterCollectResponse(buf []byte, offset flatbuffers.UOffsetT) *ClubMasterCollectResponse {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &ClubMasterCollectResponse{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *ClubMasterCollectResponse) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ClubMasterCollectResponse) Result(obj *CommonResult) *CommonResult {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(CommonResult)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func ClubMasterCollectResponseStart(builder *flatbuffers.Builder) {
	builder.StartObject(1)
}
func ClubMasterCollectResponseAddResult(builder *flatbuffers.Builder, result flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(result), 0)
}
func ClubMasterCollectResponseEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
