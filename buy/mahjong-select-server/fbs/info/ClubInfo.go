// automatically generated by the FlatBuffers compiler, do not modify

package info

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type ClubInfo struct {
	_tab flatbuffers.Table
}

func GetRootAsClubInfo(buf []byte, offset flatbuffers.UOffsetT) *ClubInfo {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &ClubInfo{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *ClubInfo) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ClubInfo) Id() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ClubInfo) MutateId(n uint32) bool {
	return rcv._tab.MutateUint32Slot(4, n)
}

func (rcv *ClubInfo) ClubName() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *ClubInfo) ClubIcon() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *ClubInfo) ManageUser() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ClubInfo) MutateManageUser(n uint32) bool {
	return rcv._tab.MutateUint32Slot(10, n)
}

func (rcv *ClubInfo) AreaName() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *ClubInfo) UserTotal() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(14))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ClubInfo) MutateUserTotal(n uint32) bool {
	return rcv._tab.MutateUint32Slot(14, n)
}

func (rcv *ClubInfo) ClubDescribe() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(16))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func ClubInfoStart(builder *flatbuffers.Builder) {
	builder.StartObject(7)
}
func ClubInfoAddId(builder *flatbuffers.Builder, id uint32) {
	builder.PrependUint32Slot(0, id, 0)
}
func ClubInfoAddClubName(builder *flatbuffers.Builder, clubName flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(clubName), 0)
}
func ClubInfoAddClubIcon(builder *flatbuffers.Builder, clubIcon flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(clubIcon), 0)
}
func ClubInfoAddManageUser(builder *flatbuffers.Builder, manageUser uint32) {
	builder.PrependUint32Slot(3, manageUser, 0)
}
func ClubInfoAddAreaName(builder *flatbuffers.Builder, areaName flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(4, flatbuffers.UOffsetT(areaName), 0)
}
func ClubInfoAddUserTotal(builder *flatbuffers.Builder, userTotal uint32) {
	builder.PrependUint32Slot(5, userTotal, 0)
}
func ClubInfoAddClubDescribe(builder *flatbuffers.Builder, clubDescribe flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(6, flatbuffers.UOffsetT(clubDescribe), 0)
}
func ClubInfoEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
