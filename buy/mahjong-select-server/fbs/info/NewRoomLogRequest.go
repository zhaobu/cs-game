// automatically generated by the FlatBuffers compiler, do not modify

package info

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type NewRoomLogRequest struct {
	_tab flatbuffers.Table
}

func GetRootAsNewRoomLogRequest(buf []byte, offset flatbuffers.UOffsetT) *NewRoomLogRequest {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &NewRoomLogRequest{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *NewRoomLogRequest) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *NewRoomLogRequest) Page() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 1
}

func (rcv *NewRoomLogRequest) MutatePage(n uint32) bool {
	return rcv._tab.MutateUint32Slot(4, n)
}

func (rcv *NewRoomLogRequest) QueryUserId() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *NewRoomLogRequest) MutateQueryUserId(n uint32) bool {
	return rcv._tab.MutateUint32Slot(6, n)
}

func (rcv *NewRoomLogRequest) ClubId() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *NewRoomLogRequest) MutateClubId(n uint32) bool {
	return rcv._tab.MutateUint32Slot(8, n)
}

func (rcv *NewRoomLogRequest) QueryType() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 999
}

func (rcv *NewRoomLogRequest) MutateQueryType(n uint32) bool {
	return rcv._tab.MutateUint32Slot(10, n)
}

func NewRoomLogRequestStart(builder *flatbuffers.Builder) {
	builder.StartObject(4)
}
func NewRoomLogRequestAddPage(builder *flatbuffers.Builder, page uint32) {
	builder.PrependUint32Slot(0, page, 1)
}
func NewRoomLogRequestAddQueryUserId(builder *flatbuffers.Builder, queryUserId uint32) {
	builder.PrependUint32Slot(1, queryUserId, 0)
}
func NewRoomLogRequestAddClubId(builder *flatbuffers.Builder, clubId uint32) {
	builder.PrependUint32Slot(2, clubId, 0)
}
func NewRoomLogRequestAddQueryType(builder *flatbuffers.Builder, queryType uint32) {
	builder.PrependUint32Slot(3, queryType, 999)
}
func NewRoomLogRequestEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
