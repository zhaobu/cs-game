// automatically generated by the FlatBuffers compiler, do not modify

package info

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type Activity struct {
	_tab flatbuffers.Table
}

func GetRootAsActivity(buf []byte, offset flatbuffers.UOffsetT) *Activity {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &Activity{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *Activity) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Activity) Id() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *Activity) MutateId(n int32) bool {
	return rcv._tab.MutateInt32Slot(4, n)
}

func (rcv *Activity) Pic() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *Activity) Weight() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *Activity) MutateWeight(n int32) bool {
	return rcv._tab.MutateInt32Slot(8, n)
}

func (rcv *Activity) Link() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *Activity) LinkType() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *Activity) MutateLinkType(n uint32) bool {
	return rcv._tab.MutateUint32Slot(12, n)
}

func (rcv *Activity) Title() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(14))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *Activity) Flag() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(16))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 1
}

func (rcv *Activity) MutateFlag(n uint32) bool {
	return rcv._tab.MutateUint32Slot(16, n)
}

func ActivityStart(builder *flatbuffers.Builder) {
	builder.StartObject(7)
}
func ActivityAddId(builder *flatbuffers.Builder, id int32) {
	builder.PrependInt32Slot(0, id, 0)
}
func ActivityAddPic(builder *flatbuffers.Builder, pic flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(pic), 0)
}
func ActivityAddWeight(builder *flatbuffers.Builder, weight int32) {
	builder.PrependInt32Slot(2, weight, 0)
}
func ActivityAddLink(builder *flatbuffers.Builder, link flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(3, flatbuffers.UOffsetT(link), 0)
}
func ActivityAddLinkType(builder *flatbuffers.Builder, linkType uint32) {
	builder.PrependUint32Slot(4, linkType, 0)
}
func ActivityAddTitle(builder *flatbuffers.Builder, title flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(5, flatbuffers.UOffsetT(title), 0)
}
func ActivityAddFlag(builder *flatbuffers.Builder, flag uint32) {
	builder.PrependUint32Slot(6, flag, 1)
}
func ActivityEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
