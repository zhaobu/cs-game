// automatically generated by the FlatBuffers compiler, do not modify

package info

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type GetAdvRequest struct {
	_tab flatbuffers.Table
}

func GetRootAsGetAdvRequest(buf []byte, offset flatbuffers.UOffsetT) *GetAdvRequest {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &GetAdvRequest{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *GetAdvRequest) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *GetAdvRequest) UserId() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *GetAdvRequest) MutateUserId(n uint32) bool {
	return rcv._tab.MutateUint32Slot(4, n)
}

func (rcv *GetAdvRequest) Position() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *GetAdvRequest) MutatePosition(n uint32) bool {
	return rcv._tab.MutateUint32Slot(6, n)
}

func (rcv *GetAdvRequest) PositionType() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *GetAdvRequest) MutatePositionType(n uint32) bool {
	return rcv._tab.MutateUint32Slot(8, n)
}

func GetAdvRequestStart(builder *flatbuffers.Builder) {
	builder.StartObject(3)
}
func GetAdvRequestAddUserId(builder *flatbuffers.Builder, userId uint32) {
	builder.PrependUint32Slot(0, userId, 0)
}
func GetAdvRequestAddPosition(builder *flatbuffers.Builder, position uint32) {
	builder.PrependUint32Slot(1, position, 0)
}
func GetAdvRequestAddPositionType(builder *flatbuffers.Builder, positionType uint32) {
	builder.PrependUint32Slot(2, positionType, 0)
}
func GetAdvRequestEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
