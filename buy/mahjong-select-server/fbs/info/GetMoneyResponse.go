// automatically generated by the FlatBuffers compiler, do not modify

package info

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type GetMoneyResponse struct {
	_tab flatbuffers.Table
}

func GetRootAsGetMoneyResponse(buf []byte, offset flatbuffers.UOffsetT) *GetMoneyResponse {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &GetMoneyResponse{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *GetMoneyResponse) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *GetMoneyResponse) Result(obj *CommonResult) *CommonResult {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(CommonResult)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func (rcv *GetMoneyResponse) UserId() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *GetMoneyResponse) MutateUserId(n uint32) bool {
	return rcv._tab.MutateUint32Slot(6, n)
}

func (rcv *GetMoneyResponse) Money() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *GetMoneyResponse) MutateMoney(n int32) bool {
	return rcv._tab.MutateInt32Slot(8, n)
}

func (rcv *GetMoneyResponse) Score() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *GetMoneyResponse) MutateScore(n int32) bool {
	return rcv._tab.MutateInt32Slot(10, n)
}

func (rcv *GetMoneyResponse) ShareGameStatus() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *GetMoneyResponse) MutateShareGameStatus(n int32) bool {
	return rcv._tab.MutateInt32Slot(12, n)
}

func GetMoneyResponseStart(builder *flatbuffers.Builder) {
	builder.StartObject(5)
}
func GetMoneyResponseAddResult(builder *flatbuffers.Builder, result flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(result), 0)
}
func GetMoneyResponseAddUserId(builder *flatbuffers.Builder, userId uint32) {
	builder.PrependUint32Slot(1, userId, 0)
}
func GetMoneyResponseAddMoney(builder *flatbuffers.Builder, money int32) {
	builder.PrependInt32Slot(2, money, 0)
}
func GetMoneyResponseAddScore(builder *flatbuffers.Builder, score int32) {
	builder.PrependInt32Slot(3, score, 0)
}
func GetMoneyResponseAddShareGameStatus(builder *flatbuffers.Builder, shareGameStatus int32) {
	builder.PrependInt32Slot(4, shareGameStatus, 0)
}
func GetMoneyResponseEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
