// automatically generated by the FlatBuffers compiler, do not modify

package info

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type CoinExchangeResponse struct {
	_tab flatbuffers.Table
}

func GetRootAsCoinExchangeResponse(buf []byte, offset flatbuffers.UOffsetT) *CoinExchangeResponse {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &CoinExchangeResponse{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *CoinExchangeResponse) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *CoinExchangeResponse) Result(obj *CommonResult) *CommonResult {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(CommonResult)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func (rcv *CoinExchangeResponse) BuyType() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *CoinExchangeResponse) MutateBuyType(n uint32) bool {
	return rcv._tab.MutateUint32Slot(6, n)
}

func (rcv *CoinExchangeResponse) UserCoins() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *CoinExchangeResponse) MutateUserCoins(n uint32) bool {
	return rcv._tab.MutateUint32Slot(8, n)
}

func (rcv *CoinExchangeResponse) UserMoneys() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *CoinExchangeResponse) MutateUserMoneys(n uint32) bool {
	return rcv._tab.MutateUint32Slot(10, n)
}

func CoinExchangeResponseStart(builder *flatbuffers.Builder) {
	builder.StartObject(4)
}
func CoinExchangeResponseAddResult(builder *flatbuffers.Builder, result flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(result), 0)
}
func CoinExchangeResponseAddBuyType(builder *flatbuffers.Builder, buyType uint32) {
	builder.PrependUint32Slot(1, buyType, 0)
}
func CoinExchangeResponseAddUserCoins(builder *flatbuffers.Builder, userCoins uint32) {
	builder.PrependUint32Slot(2, userCoins, 0)
}
func CoinExchangeResponseAddUserMoneys(builder *flatbuffers.Builder, userMoneys uint32) {
	builder.PrependUint32Slot(3, userMoneys, 0)
}
func CoinExchangeResponseEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
