// automatically generated by the FlatBuffers compiler, do not modify

package Common

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type ClubClubMessagePush struct {
	_tab flatbuffers.Table
}

func GetRootAsClubClubMessagePush(buf []byte, offset flatbuffers.UOffsetT) *ClubClubMessagePush {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &ClubClubMessagePush{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *ClubClubMessagePush) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ClubClubMessagePush) ClubId() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ClubClubMessagePush) MutateClubId(n int32) bool {
	return rcv._tab.MutateInt32Slot(4, n)
}

func (rcv *ClubClubMessagePush) Msg(obj *Msg) *Msg {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(Msg)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func ClubClubMessagePushStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func ClubClubMessagePushAddClubId(builder *flatbuffers.Builder, clubId int32) {
	builder.PrependInt32Slot(0, clubId, 0)
}
func ClubClubMessagePushAddMsg(builder *flatbuffers.Builder, msg flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(msg), 0)
}
func ClubClubMessagePushEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
