// automatically generated by the FlatBuffers compiler, do not modify

package Common

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type GameRestoreNotify struct {
	_tab flatbuffers.Table
}

func GetRootAsGameRestoreNotify(buf []byte, offset flatbuffers.UOffsetT) *GameRestoreNotify {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &GameRestoreNotify{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *GameRestoreNotify) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *GameRestoreNotify) RoomId() uint64 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetUint64(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *GameRestoreNotify) MutateRoomId(n uint64) bool {
	return rcv._tab.MutateUint64Slot(4, n)
}

func (rcv *GameRestoreNotify) Round() uint16 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetUint16(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *GameRestoreNotify) MutateRound(n uint16) bool {
	return rcv._tab.MutateUint16Slot(6, n)
}

func (rcv *GameRestoreNotify) Step() uint16 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.GetUint16(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *GameRestoreNotify) MutateStep(n uint16) bool {
	return rcv._tab.MutateUint16Slot(8, n)
}

func GameRestoreNotifyStart(builder *flatbuffers.Builder) {
	builder.StartObject(3)
}
func GameRestoreNotifyAddRoomId(builder *flatbuffers.Builder, roomId uint64) {
	builder.PrependUint64Slot(0, roomId, 0)
}
func GameRestoreNotifyAddRound(builder *flatbuffers.Builder, round uint16) {
	builder.PrependUint16Slot(1, round, 0)
}
func GameRestoreNotifyAddStep(builder *flatbuffers.Builder, step uint16) {
	builder.PrependUint16Slot(2, step, 0)
}
func GameRestoreNotifyEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
