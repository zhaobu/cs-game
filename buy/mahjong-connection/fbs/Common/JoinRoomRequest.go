// automatically generated by the FlatBuffers compiler, do not modify

package Common

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type JoinRoomRequest struct {
	_tab flatbuffers.Table
}

func GetRootAsJoinRoomRequest(buf []byte, offset flatbuffers.UOffsetT) *JoinRoomRequest {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &JoinRoomRequest{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *JoinRoomRequest) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *JoinRoomRequest) Number() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func JoinRoomRequestStart(builder *flatbuffers.Builder) {
	builder.StartObject(1)
}
func JoinRoomRequestAddNumber(builder *flatbuffers.Builder, number flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(number), 0)
}
func JoinRoomRequestEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
