// automatically generated by the FlatBuffers compiler, do not modify

package Common

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type ClubJoinPush struct {
	_tab flatbuffers.Table
}

func GetRootAsClubJoinPush(buf []byte, offset flatbuffers.UOffsetT) *ClubJoinPush {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &ClubJoinPush{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *ClubJoinPush) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ClubJoinPush) ClubId() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ClubJoinPush) MutateClubId(n int32) bool {
	return rcv._tab.MutateInt32Slot(4, n)
}

func (rcv *ClubJoinPush) UserId() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ClubJoinPush) MutateUserId(n uint32) bool {
	return rcv._tab.MutateUint32Slot(6, n)
}

func ClubJoinPushStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func ClubJoinPushAddClubId(builder *flatbuffers.Builder, clubId int32) {
	builder.PrependInt32Slot(0, clubId, 0)
}
func ClubJoinPushAddUserId(builder *flatbuffers.Builder, userId uint32) {
	builder.PrependUint32Slot(1, userId, 0)
}
func ClubJoinPushEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
