syntax = "proto3";

package pbgame_mj_changshou;

message int32XX {
  int32 T = 1;
}

///////////////////////////c-s///////////////////////////
// 出牌
message C2SOutCard {
  int32 card = 1;
}

//碰牌
message C2SPengCard {
  int32 card = 1;
}

//杠牌
message C2SGangCard {
  int32 card = 1;
}

//吃牌
message C2SChiCard {
  int32 card = 1;                  //上家打出的牌
  repeated int32XX will_card = 2;  //用来吃的手牌
}

//胡牌
message C2SHuCard {
}

//取消操作
message C2SCancelAction {
}

//重连获取牌局信息
message C2SReconnectGame {
}

///////////////////////////s-c///////////////////////////
//游戏开始
message UserInfo {
  int32 user_pos = 1;    //玩家方位(1:东2:南3:西4:北)
  int32 dice_value = 2;  //骰子值
}

message S2CStartGame {
  int32 banker_id = 1;  //庄家id
  repeated UserInfo user_info = 2;
}

//发牌
message S2CDealCard {
  int32 card_first = 1;        //第一个出牌的玩家id
  repeated int32XX cards = 2;  //玩家手牌数组
}

//玩家摸牌
message S2CDrawCard {
  int32 chair_id = 1;  //摸牌玩家
  int32 card = 2;      //摸到的牌
  int32 left_num = 3;  //剩余张数
}

message BuHuaOnce {
  int32 hua_card = 1;  //花牌值
  int32 bu_card = 2;   //补到的牌
}
//补花
message S2CBuHua {
  int32 chair_id = 1;                    //补花玩家
  repeated BuHuaOnce bu_hua_result = 2;  //补花结果
}

//玩家出牌
message S2COutCard {
  int32 chair_id = 1;  //出牌玩家
  int32 card = 2;      //出的牌
}

//玩家该轮的操作
message S2CHaveOperation {
  string operation = 1;
  /*
  json:{canChitb:{{11,12},{14,15},..},能吃
        canPeng:card,  能碰
        canGangtb={11=11,13=13,..},  能杠
        canHutb:{1,2,3}  能胡
       }
  */
}

//玩家碰牌
message S2CPengCard {
  int32 chair_id = 1;  //碰牌玩家
  int32 card = 2;      //要碰的牌
}

//玩家杠牌
message S2CGangCard {
  int32 chair_id = 1;    //杠牌玩家
  int32 card = 2;        //要杠的牌
  int32 gang_type = 3;   // 1.梭杠2.暗杠3.明杠
  int32 lose_chair = 4;  //放杠的玩家
}

//玩家吃牌
message S2CChiCard {
  int32 chair_id = 1;               //吃牌玩家
  int32 card = 2;                   //要吃的牌:22
  repeated int32XX card_table = 3;  //待吃的牌:{21,23}
}

//玩家胡牌
message S2CHuCard {
  int32 chair_id = 1;               //胡牌玩家chair_id
  repeated int32XX card_table = 2;  //胡牌手牌
}

//倒计时显示在谁头上
message S2CTimeoutChair {
  int32 chair_id = 1;
}

message PlayerBalanceInfo {
  string hu_type = 1;  // json G_HuScore_Type类型参数
  // json {anGang:1,jieGang:1,fangGang:1,mingGang:1},暗杠数,接杠数,放杠数,明杠数
  string gang_type = 2;
  int32 hu_card = 3;               //显示胡的牌
  repeated int32XX hand_card = 4;  //手牌
  int32 point = 5;                 //当局获得分数
  int32 total_point = 6;           //玩家当前总分数
}
//单局游戏结束
message S2CGameEnd {
  int32 game_index = 1;                           //当前局数
  int32 hu_chair = 2;                             //胡牌玩家chair_id
  int32 banker = 3;                               //庄家id
  repeated PlayerBalanceInfo player_balance = 4;  //玩家当局结算信息
  bool isdeuce = 5;                               //是否平局
}

message PlayerBalanceResult {
  int32 uid = 1;       //玩家uid
  int32 point = 2;     //得分
  int32 huPai = 3;     //胡牌次数
  int32 dianPao = 4;   //点炮次数
  int32 anGang = 5;    //暗杠次数
  int32 mingGang = 6;  //明杠次数
}
//大局结算
message S2CBalanceResult {
  string room_name = 1;                            //房间名称
  repeated PlayerBalanceResult player_result = 2;  //大结算结果
}

message CardInfo {
  int32 chair_id = 1;  //玩家chair_id
  int32 out_cards = 2;  //玩家出過的牌(不包括被碰，杠，吃掉的牌)
  //玩家碰的牌 json {"12":1,"13":1}->碰了2萬 3萬
  string peng_cards = 3;
  //玩家杠的牌 json {"16":2}-> 杠了6萬（1:明杠(碰牌后再杠)，2:暗杠，3:接杠)
  string gang_cards = 4;
  //玩家吃的牌[11,12,13;22,23,24],3个连续的组成吃
  repeated int32XX chi_cards = 5;
  repeated int32XX hand_cards = 6;  //玩家的手牌
  int32 card_num = 7;               //玩家当前手上的牌数
  int32 point = 8;                  //玩家当前分数
}
//重连获取牌局信息
message S2CReconnectGame {
  CardInfo player_card = 1;  //玩家的牌
  //玩家可執行的操作 json  [{"canPeng":true}] [{"canGang":[42]}]
  string can_operation = 2;
  int32 cur_out_chair = 3;   //當前該出牌的玩家
  int32 last_out_chair = 4;  //上次出牌的玩家
  int32 last_out_card = 5;   //上次出的牌
  int32 banker = 6;          //庄家
  int32 left_num = 7;        //剩下的牌數
  int32 game_index = 8;      //當前局數
}