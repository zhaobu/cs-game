// automatically generated by the FlatBuffers compiler, do not modify

package Common

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type GameEnterPush struct {
	_tab flatbuffers.Table
}

func GetRootAsGameEnterPush(buf []byte, offset flatbuffers.UOffsetT) *GameEnterPush {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &GameEnterPush{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *GameEnterPush) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *GameEnterPush) NearUsers(j int) uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.GetUint32(a + flatbuffers.UOffsetT(j*4))
	}
	return 0
}

func (rcv *GameEnterPush) NearUsersLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

func (rcv *GameEnterPush) NoPositionUsers(j int) uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.GetUint32(a + flatbuffers.UOffsetT(j*4))
	}
	return 0
}

func (rcv *GameEnterPush) NoPositionUsersLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

func GameEnterPushStart(builder *flatbuffers.Builder) {
	builder.StartObject(2)
}
func GameEnterPushAddNearUsers(builder *flatbuffers.Builder, nearUsers flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(nearUsers), 0)
}
func GameEnterPushStartNearUsersVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(4, numElems, 4)
}
func GameEnterPushAddNoPositionUsers(builder *flatbuffers.Builder, noPositionUsers flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(noPositionUsers), 0)
}
func GameEnterPushStartNoPositionUsersVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(4, numElems, 4)
}
func GameEnterPushEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
