// automatically generated by the FlatBuffers compiler, do not modify

package Common

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type RoomChatPush struct {
	_tab flatbuffers.Table
}

func GetRootAsRoomChatPush(buf []byte, offset flatbuffers.UOffsetT) *RoomChatPush {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &RoomChatPush{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *RoomChatPush) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *RoomChatPush) UserId() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *RoomChatPush) MutateUserId(n uint32) bool {
	return rcv._tab.MutateUint32Slot(4, n)
}

func (rcv *RoomChatPush) ChatId() int16 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetInt16(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *RoomChatPush) MutateChatId(n int16) bool {
	return rcv._tab.MutateInt16Slot(6, n)
}

func (rcv *RoomChatPush) MemberId() byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.GetByte(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *RoomChatPush) MutateMemberId(n byte) bool {
	return rcv._tab.MutateByteSlot(8, n)
}

func (rcv *RoomChatPush) Content() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func RoomChatPushStart(builder *flatbuffers.Builder) {
	builder.StartObject(4)
}
func RoomChatPushAddUserId(builder *flatbuffers.Builder, userId uint32) {
	builder.PrependUint32Slot(0, userId, 0)
}
func RoomChatPushAddChatId(builder *flatbuffers.Builder, chatId int16) {
	builder.PrependInt16Slot(1, chatId, 0)
}
func RoomChatPushAddMemberId(builder *flatbuffers.Builder, memberId byte) {
	builder.PrependByteSlot(2, memberId, 0)
}
func RoomChatPushAddContent(builder *flatbuffers.Builder, content flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(3, flatbuffers.UOffsetT(content), 0)
}
func RoomChatPushEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
