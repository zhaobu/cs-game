#!/usr/bin/env bash

# 项目的上层目录
srcdir="$GOPATH/src"
#项目名称
project="mahjong-select-server"
#项目路径
projectdir="$srcdir/$project"
#nohup存放目录
nohupDir="/data/mahjong.nohup"

# 更新代码
pull () {
	cd $projectdir
	echo "git pull --tags"
	git pull --tags
	echo "git checkout [$1]..."
	git checkout $1
	git pull
	cd -
}

# 编译安装
install () {
	cd $projectdir

	# 编译主程序
	echo "go build -o $GOBIN/$project.$1"
	go build -o "$GOBIN/$project.$1"

	cd -
}

# 启动进程
start() {
	echo "启动主进程"
	echo "nohup ../../bin/$project.$2 -env=$1  -port=$3 >> $nohupDir/$project.nohup.out.$2 2>&1 &"
	nohup ../../bin/$project.$2 -env=$1  -port=$3 >> $nohupDir/$project.nohup.out.$2 2>&1 &
	echo "服务启动完成..."
}

# 关闭进程
stop() {
	echo "关闭服务器 $1"
	ps -ef | grep $project | grep "=$1$" | grep -v grep |awk '{print $2}' |xargs kill
	echo "进程已关闭"
}

# 部署
deploy() {
	# 更新代码 pull tag/branch
	pull $3
	# 编译安装 install version
	install $2
	# 关闭旧程序 stop server
	stop $4
	# 开启新服务 start server version
	start $1 $2 $4
}

# 帮助
help() {
	echo "Usage:"
	echo "1. ./deploy pull tag/branch, eg: ./deploy pull prod_1.0.0"
	echo "2. ./deploy install version, eg: ./deploy install 1.0.0"
	echo "3. ./deploy stop port, eg: ./deploy stop 8081"
	echo "4. ./deploy start env version port, eg: ./deploy start product 1.0.0 8081"

	echo "Usage:"
	echo "./deploy deploy env version tag/branch port, eg: ./deploy deploy product 1.0.0 prod_1.0.0 8081"

	echo "Usage:"
	echo "./deploy all, show all running process."
}

all() {
	echo "ps -ef | grep mahjong-select-server | grep -v grep"
	ps -ef | grep mahjong-select-server | grep -v grep
}

case "$1" in 
	help)
		$1
		;;
	start)
		$1 $2 $3 $4
		;;
	stop)
		$1 $2
		;;
	pull)
		$1 $2
		;;
	install)
		$1 $2
		;;
	deploy)
		$1 $2 $3 $4 $5
		;;
	all)
		$1
		;;
	*)
	help
	exit 2
esac
