// automatically generated by the FlatBuffers compiler, do not modify

package info

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type SelectEnvResponse struct {
	_tab flatbuffers.Table
}

func GetRootAsSelectEnvResponse(buf []byte, offset flatbuffers.UOffsetT) *SelectEnvResponse {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &SelectEnvResponse{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *SelectEnvResponse) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *SelectEnvResponse) Result(obj *CommonResult) *CommonResult {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(CommonResult)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func (rcv *SelectEnvResponse) Version() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *SelectEnvResponse) InfoURL() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *SelectEnvResponse) WechatLogin() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *SelectEnvResponse) MutateWechatLogin(n uint32) bool {
	return rcv._tab.MutateUint32Slot(10, n)
}

func (rcv *SelectEnvResponse) GuestLogin() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *SelectEnvResponse) MutateGuestLogin(n uint32) bool {
	return rcv._tab.MutateUint32Slot(12, n)
}

func (rcv *SelectEnvResponse) CsStatus() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(14))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *SelectEnvResponse) MutateCsStatus(n uint32) bool {
	return rcv._tab.MutateUint32Slot(14, n)
}

func (rcv *SelectEnvResponse) ShopStatus() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(16))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *SelectEnvResponse) MutateShopStatus(n uint32) bool {
	return rcv._tab.MutateUint32Slot(16, n)
}

func (rcv *SelectEnvResponse) FreeStatus() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(18))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *SelectEnvResponse) MutateFreeStatus(n uint32) bool {
	return rcv._tab.MutateUint32Slot(18, n)
}

func (rcv *SelectEnvResponse) MatchStatus() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(20))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *SelectEnvResponse) MutateMatchStatus(n uint32) bool {
	return rcv._tab.MutateUint32Slot(20, n)
}

func (rcv *SelectEnvResponse) WxJoinroom() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(22))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *SelectEnvResponse) WxShareFriend() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(24))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *SelectEnvResponse) WxFeedback() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(26))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *SelectEnvResponse) WxShareImg() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(28))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *SelectEnvResponse) HotFixAssetBundlesUrl() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(30))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *SelectEnvResponse) KingStatus() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(32))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *SelectEnvResponse) MutateKingStatus(n uint32) bool {
	return rcv._tab.MutateUint32Slot(32, n)
}

func (rcv *SelectEnvResponse) ErrUrl() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(34))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *SelectEnvResponse) CopyStatus() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(36))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 1
}

func (rcv *SelectEnvResponse) MutateCopyStatus(n uint32) bool {
	return rcv._tab.MutateUint32Slot(36, n)
}

func (rcv *SelectEnvResponse) PhotoStatus() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(38))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 1
}

func (rcv *SelectEnvResponse) MutatePhotoStatus(n uint32) bool {
	return rcv._tab.MutateUint32Slot(38, n)
}

func (rcv *SelectEnvResponse) QqLogin() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(40))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 1
}

func (rcv *SelectEnvResponse) MutateQqLogin(n uint32) bool {
	return rcv._tab.MutateUint32Slot(40, n)
}

func (rcv *SelectEnvResponse) ShareStatus() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(42))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 1
}

func (rcv *SelectEnvResponse) MutateShareStatus(n uint32) bool {
	return rcv._tab.MutateUint32Slot(42, n)
}

func (rcv *SelectEnvResponse) ConnURL() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(44))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *SelectEnvResponse) ClubStatus() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(46))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *SelectEnvResponse) MutateClubStatus(n uint32) bool {
	return rcv._tab.MutateUint32Slot(46, n)
}

func (rcv *SelectEnvResponse) GeoStatus() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(48))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 1
}

func (rcv *SelectEnvResponse) MutateGeoStatus(n uint32) bool {
	return rcv._tab.MutateUint32Slot(48, n)
}

func (rcv *SelectEnvResponse) InviteStatus() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(50))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 1
}

func (rcv *SelectEnvResponse) MutateInviteStatus(n uint32) bool {
	return rcv._tab.MutateUint32Slot(50, n)
}

func (rcv *SelectEnvResponse) MobileLogin() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(52))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 1
}

func (rcv *SelectEnvResponse) MutateMobileLogin(n uint32) bool {
	return rcv._tab.MutateUint32Slot(52, n)
}

func (rcv *SelectEnvResponse) PlayStatus() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(54))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 1
}

func (rcv *SelectEnvResponse) MutatePlayStatus(n uint32) bool {
	return rcv._tab.MutateUint32Slot(54, n)
}

func (rcv *SelectEnvResponse) Setting(j int) uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(56))
	if o != 0 {
		a := rcv._tab.Vector(o)
		return rcv._tab.GetUint32(a + flatbuffers.UOffsetT(j*4))
	}
	return 0
}

func (rcv *SelectEnvResponse) SettingLength() int {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(56))
	if o != 0 {
		return rcv._tab.VectorLen(o)
	}
	return 0
}

func (rcv *SelectEnvResponse) SettingConfigs(obj *SettingConfig) *SettingConfig {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(58))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(SettingConfig)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func SelectEnvResponseStart(builder *flatbuffers.Builder) {
	builder.StartObject(28)
}
func SelectEnvResponseAddResult(builder *flatbuffers.Builder, result flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(result), 0)
}
func SelectEnvResponseAddVersion(builder *flatbuffers.Builder, version flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(version), 0)
}
func SelectEnvResponseAddInfoURL(builder *flatbuffers.Builder, infoURL flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(infoURL), 0)
}
func SelectEnvResponseAddWechatLogin(builder *flatbuffers.Builder, wechatLogin uint32) {
	builder.PrependUint32Slot(3, wechatLogin, 0)
}
func SelectEnvResponseAddGuestLogin(builder *flatbuffers.Builder, guestLogin uint32) {
	builder.PrependUint32Slot(4, guestLogin, 0)
}
func SelectEnvResponseAddCsStatus(builder *flatbuffers.Builder, csStatus uint32) {
	builder.PrependUint32Slot(5, csStatus, 0)
}
func SelectEnvResponseAddShopStatus(builder *flatbuffers.Builder, shopStatus uint32) {
	builder.PrependUint32Slot(6, shopStatus, 0)
}
func SelectEnvResponseAddFreeStatus(builder *flatbuffers.Builder, freeStatus uint32) {
	builder.PrependUint32Slot(7, freeStatus, 0)
}
func SelectEnvResponseAddMatchStatus(builder *flatbuffers.Builder, matchStatus uint32) {
	builder.PrependUint32Slot(8, matchStatus, 0)
}
func SelectEnvResponseAddWxJoinroom(builder *flatbuffers.Builder, wxJoinroom flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(9, flatbuffers.UOffsetT(wxJoinroom), 0)
}
func SelectEnvResponseAddWxShareFriend(builder *flatbuffers.Builder, wxShareFriend flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(10, flatbuffers.UOffsetT(wxShareFriend), 0)
}
func SelectEnvResponseAddWxFeedback(builder *flatbuffers.Builder, wxFeedback flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(11, flatbuffers.UOffsetT(wxFeedback), 0)
}
func SelectEnvResponseAddWxShareImg(builder *flatbuffers.Builder, wxShareImg flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(12, flatbuffers.UOffsetT(wxShareImg), 0)
}
func SelectEnvResponseAddHotFixAssetBundlesUrl(builder *flatbuffers.Builder, HotFixAssetBundlesUrl flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(13, flatbuffers.UOffsetT(HotFixAssetBundlesUrl), 0)
}
func SelectEnvResponseAddKingStatus(builder *flatbuffers.Builder, kingStatus uint32) {
	builder.PrependUint32Slot(14, kingStatus, 0)
}
func SelectEnvResponseAddErrUrl(builder *flatbuffers.Builder, errUrl flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(15, flatbuffers.UOffsetT(errUrl), 0)
}
func SelectEnvResponseAddCopyStatus(builder *flatbuffers.Builder, copyStatus uint32) {
	builder.PrependUint32Slot(16, copyStatus, 1)
}
func SelectEnvResponseAddPhotoStatus(builder *flatbuffers.Builder, photoStatus uint32) {
	builder.PrependUint32Slot(17, photoStatus, 1)
}
func SelectEnvResponseAddQqLogin(builder *flatbuffers.Builder, qqLogin uint32) {
	builder.PrependUint32Slot(18, qqLogin, 1)
}
func SelectEnvResponseAddShareStatus(builder *flatbuffers.Builder, shareStatus uint32) {
	builder.PrependUint32Slot(19, shareStatus, 1)
}
func SelectEnvResponseAddConnURL(builder *flatbuffers.Builder, connURL flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(20, flatbuffers.UOffsetT(connURL), 0)
}
func SelectEnvResponseAddClubStatus(builder *flatbuffers.Builder, clubStatus uint32) {
	builder.PrependUint32Slot(21, clubStatus, 0)
}
func SelectEnvResponseAddGeoStatus(builder *flatbuffers.Builder, geoStatus uint32) {
	builder.PrependUint32Slot(22, geoStatus, 1)
}
func SelectEnvResponseAddInviteStatus(builder *flatbuffers.Builder, inviteStatus uint32) {
	builder.PrependUint32Slot(23, inviteStatus, 1)
}
func SelectEnvResponseAddMobileLogin(builder *flatbuffers.Builder, mobileLogin uint32) {
	builder.PrependUint32Slot(24, mobileLogin, 1)
}
func SelectEnvResponseAddPlayStatus(builder *flatbuffers.Builder, playStatus uint32) {
	builder.PrependUint32Slot(25, playStatus, 1)
}
func SelectEnvResponseAddSetting(builder *flatbuffers.Builder, setting flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(26, flatbuffers.UOffsetT(setting), 0)
}
func SelectEnvResponseStartSettingVector(builder *flatbuffers.Builder, numElems int) flatbuffers.UOffsetT {
	return builder.StartVector(4, numElems, 4)
}
func SelectEnvResponseAddSettingConfigs(builder *flatbuffers.Builder, settingConfigs flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(27, flatbuffers.UOffsetT(settingConfigs), 0)
}
func SelectEnvResponseEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
