// automatically generated by the FlatBuffers compiler, do not modify

package info

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type GetMiscDataRequest struct {
	_tab flatbuffers.Table
}

func GetRootAsGetMiscDataRequest(buf []byte, offset flatbuffers.UOffsetT) *GetMiscDataRequest {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &GetMiscDataRequest{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *GetMiscDataRequest) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *GetMiscDataRequest) UserId() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *GetMiscDataRequest) MutateUserId(n uint32) bool {
	return rcv._tab.MutateUint32Slot(4, n)
}

func (rcv *GetMiscDataRequest) RequestMisc() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 1
}

func (rcv *GetMiscDataRequest) MutateRequestMisc(n uint32) bool {
	return rcv._tab.MutateUint32Slot(6, n)
}

func (rcv *GetMiscDataRequest) RequestGetUser() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *GetMiscDataRequest) MutateRequestGetUser(n uint32) bool {
	return rcv._tab.MutateUint32Slot(8, n)
}

func (rcv *GetMiscDataRequest) RequestGetNotice() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *GetMiscDataRequest) MutateRequestGetNotice(n uint32) bool {
	return rcv._tab.MutateUint32Slot(10, n)
}

func (rcv *GetMiscDataRequest) RequestGetNew() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *GetMiscDataRequest) MutateRequestGetNew(n uint32) bool {
	return rcv._tab.MutateUint32Slot(12, n)
}

func (rcv *GetMiscDataRequest) RequestGetWakePlay() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(14))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *GetMiscDataRequest) MutateRequestGetWakePlay(n uint32) bool {
	return rcv._tab.MutateUint32Slot(14, n)
}

func (rcv *GetMiscDataRequest) RequestGetMoney() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(16))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *GetMiscDataRequest) MutateRequestGetMoney(n uint32) bool {
	return rcv._tab.MutateUint32Slot(16, n)
}

func GetMiscDataRequestStart(builder *flatbuffers.Builder) {
	builder.StartObject(7)
}
func GetMiscDataRequestAddUserId(builder *flatbuffers.Builder, userId uint32) {
	builder.PrependUint32Slot(0, userId, 0)
}
func GetMiscDataRequestAddRequestMisc(builder *flatbuffers.Builder, requestMisc uint32) {
	builder.PrependUint32Slot(1, requestMisc, 1)
}
func GetMiscDataRequestAddRequestGetUser(builder *flatbuffers.Builder, requestGetUser uint32) {
	builder.PrependUint32Slot(2, requestGetUser, 0)
}
func GetMiscDataRequestAddRequestGetNotice(builder *flatbuffers.Builder, requestGetNotice uint32) {
	builder.PrependUint32Slot(3, requestGetNotice, 0)
}
func GetMiscDataRequestAddRequestGetNew(builder *flatbuffers.Builder, requestGetNew uint32) {
	builder.PrependUint32Slot(4, requestGetNew, 0)
}
func GetMiscDataRequestAddRequestGetWakePlay(builder *flatbuffers.Builder, requestGetWakePlay uint32) {
	builder.PrependUint32Slot(5, requestGetWakePlay, 0)
}
func GetMiscDataRequestAddRequestGetMoney(builder *flatbuffers.Builder, requestGetMoney uint32) {
	builder.PrependUint32Slot(6, requestGetMoney, 0)
}
func GetMiscDataRequestEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
