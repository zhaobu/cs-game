// automatically generated by the FlatBuffers compiler, do not modify

package info

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type ClubUpdateRequest struct {
	_tab flatbuffers.Table
}

func GetRootAsClubUpdateRequest(buf []byte, offset flatbuffers.UOffsetT) *ClubUpdateRequest {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &ClubUpdateRequest{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *ClubUpdateRequest) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ClubUpdateRequest) ClubId() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ClubUpdateRequest) MutateClubId(n uint32) bool {
	return rcv._tab.MutateUint32Slot(4, n)
}

func (rcv *ClubUpdateRequest) UserId() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ClubUpdateRequest) MutateUserId(n uint32) bool {
	return rcv._tab.MutateUint32Slot(6, n)
}

func (rcv *ClubUpdateRequest) ClubName() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *ClubUpdateRequest) AreaId() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ClubUpdateRequest) MutateAreaId(n uint32) bool {
	return rcv._tab.MutateUint32Slot(10, n)
}

func (rcv *ClubUpdateRequest) ClubDescribe() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func ClubUpdateRequestStart(builder *flatbuffers.Builder) {
	builder.StartObject(5)
}
func ClubUpdateRequestAddClubId(builder *flatbuffers.Builder, clubId uint32) {
	builder.PrependUint32Slot(0, clubId, 0)
}
func ClubUpdateRequestAddUserId(builder *flatbuffers.Builder, userId uint32) {
	builder.PrependUint32Slot(1, userId, 0)
}
func ClubUpdateRequestAddClubName(builder *flatbuffers.Builder, clubName flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(clubName), 0)
}
func ClubUpdateRequestAddAreaId(builder *flatbuffers.Builder, areaId uint32) {
	builder.PrependUint32Slot(3, areaId, 0)
}
func ClubUpdateRequestAddClubDescribe(builder *flatbuffers.Builder, clubDescribe flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(4, flatbuffers.UOffsetT(clubDescribe), 0)
}
func ClubUpdateRequestEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
