// automatically generated by the FlatBuffers compiler, do not modify

package info

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type GetMiscDataResponse struct {
	_tab flatbuffers.Table
}

func GetRootAsGetMiscDataResponse(buf []byte, offset flatbuffers.UOffsetT) *GetMiscDataResponse {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &GetMiscDataResponse{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *GetMiscDataResponse) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *GetMiscDataResponse) Result(obj *CommonResult) *CommonResult {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(CommonResult)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func (rcv *GetMiscDataResponse) ShareScoreBgImg() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *GetMiscDataResponse) IconUrl() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *GetMiscDataResponse) GetUser(obj *MiscUserInfo) *MiscUserInfo {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(MiscUserInfo)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func (rcv *GetMiscDataResponse) GetMoney(obj *MiscMoney) *MiscMoney {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(MiscMoney)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func (rcv *GetMiscDataResponse) GetNew(obj *MiscNew) *MiscNew {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(14))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(MiscNew)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func (rcv *GetMiscDataResponse) GetWakePlay(obj *MiscWakePlay) *MiscWakePlay {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(16))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(MiscWakePlay)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func (rcv *GetMiscDataResponse) GetNotice(obj *MiscNotice) *MiscNotice {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(18))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(MiscNotice)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func (rcv *GetMiscDataResponse) GetMisc(obj *MiscData) *MiscData {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(20))
	if o != 0 {
		x := rcv._tab.Indirect(o + rcv._tab.Pos)
		if obj == nil {
			obj = new(MiscData)
		}
		obj.Init(rcv._tab.Bytes, x)
		return obj
	}
	return nil
}

func GetMiscDataResponseStart(builder *flatbuffers.Builder) {
	builder.StartObject(9)
}
func GetMiscDataResponseAddResult(builder *flatbuffers.Builder, result flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(result), 0)
}
func GetMiscDataResponseAddShareScoreBgImg(builder *flatbuffers.Builder, shareScoreBgImg flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(shareScoreBgImg), 0)
}
func GetMiscDataResponseAddIconUrl(builder *flatbuffers.Builder, iconUrl flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(iconUrl), 0)
}
func GetMiscDataResponseAddGetUser(builder *flatbuffers.Builder, getUser flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(3, flatbuffers.UOffsetT(getUser), 0)
}
func GetMiscDataResponseAddGetMoney(builder *flatbuffers.Builder, getMoney flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(4, flatbuffers.UOffsetT(getMoney), 0)
}
func GetMiscDataResponseAddGetNew(builder *flatbuffers.Builder, getNew flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(5, flatbuffers.UOffsetT(getNew), 0)
}
func GetMiscDataResponseAddGetWakePlay(builder *flatbuffers.Builder, getWakePlay flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(6, flatbuffers.UOffsetT(getWakePlay), 0)
}
func GetMiscDataResponseAddGetNotice(builder *flatbuffers.Builder, getNotice flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(7, flatbuffers.UOffsetT(getNotice), 0)
}
func GetMiscDataResponseAddGetMisc(builder *flatbuffers.Builder, getMisc flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(8, flatbuffers.UOffsetT(getMisc), 0)
}
func GetMiscDataResponseEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
