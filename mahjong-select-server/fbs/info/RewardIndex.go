// automatically generated by the FlatBuffers compiler, do not modify

package info

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type RewardIndex struct {
	_tab flatbuffers.Table
}

func GetRootAsRewardIndex(buf []byte, offset flatbuffers.UOffsetT) *RewardIndex {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &RewardIndex{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *RewardIndex) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *RewardIndex) ListType() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *RewardIndex) MutateListType(n uint32) bool {
	return rcv._tab.MutateUint32Slot(4, n)
}

func (rcv *RewardIndex) CurRank() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *RewardIndex) CurBanner() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func RewardIndexStart(builder *flatbuffers.Builder) {
	builder.StartObject(3)
}
func RewardIndexAddListType(builder *flatbuffers.Builder, listType uint32) {
	builder.PrependUint32Slot(0, listType, 0)
}
func RewardIndexAddCurRank(builder *flatbuffers.Builder, curRank flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(curRank), 0)
}
func RewardIndexAddCurBanner(builder *flatbuffers.Builder, curBanner flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(curBanner), 0)
}
func RewardIndexEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
