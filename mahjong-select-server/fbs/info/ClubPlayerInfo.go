// automatically generated by the FlatBuffers compiler, do not modify

package info

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type ClubPlayerInfo struct {
	_tab flatbuffers.Table
}

func GetRootAsClubPlayerInfo(buf []byte, offset flatbuffers.UOffsetT) *ClubPlayerInfo {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &ClubPlayerInfo{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *ClubPlayerInfo) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ClubPlayerInfo) PlayerUid() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ClubPlayerInfo) MutatePlayerUid(n uint32) bool {
	return rcv._tab.MutateUint32Slot(4, n)
}

func (rcv *ClubPlayerInfo) PlayerIcon() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *ClubPlayerInfo) PlayerScore() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *ClubPlayerInfo) MutatePlayerScore(n int32) bool {
	return rcv._tab.MutateInt32Slot(8, n)
}

func ClubPlayerInfoStart(builder *flatbuffers.Builder) {
	builder.StartObject(3)
}
func ClubPlayerInfoAddPlayerUid(builder *flatbuffers.Builder, playerUid uint32) {
	builder.PrependUint32Slot(0, playerUid, 0)
}
func ClubPlayerInfoAddPlayerIcon(builder *flatbuffers.Builder, playerIcon flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(playerIcon), 0)
}
func ClubPlayerInfoAddPlayerScore(builder *flatbuffers.Builder, playerScore int32) {
	builder.PrependInt32Slot(2, playerScore, 0)
}
func ClubPlayerInfoEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
