// automatically generated by the FlatBuffers compiler, do not modify

package info

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type OrderRequest struct {
	_tab flatbuffers.Table
}

func GetRootAsOrderRequest(buf []byte, offset flatbuffers.UOffsetT) *OrderRequest {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &OrderRequest{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *OrderRequest) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *OrderRequest) UserId() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *OrderRequest) MutateUserId(n uint32) bool {
	return rcv._tab.MutateUint32Slot(4, n)
}

func (rcv *OrderRequest) BuyType() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *OrderRequest) MutateBuyType(n int32) bool {
	return rcv._tab.MutateInt32Slot(6, n)
}

func (rcv *OrderRequest) ProductId() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *OrderRequest) MutateProductId(n int32) bool {
	return rcv._tab.MutateInt32Slot(8, n)
}

func (rcv *OrderRequest) Receipt() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func OrderRequestStart(builder *flatbuffers.Builder) {
	builder.StartObject(4)
}
func OrderRequestAddUserId(builder *flatbuffers.Builder, userId uint32) {
	builder.PrependUint32Slot(0, userId, 0)
}
func OrderRequestAddBuyType(builder *flatbuffers.Builder, buyType int32) {
	builder.PrependInt32Slot(1, buyType, 0)
}
func OrderRequestAddProductId(builder *flatbuffers.Builder, productId int32) {
	builder.PrependInt32Slot(2, productId, 0)
}
func OrderRequestAddReceipt(builder *flatbuffers.Builder, receipt flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(3, flatbuffers.UOffsetT(receipt), 0)
}
func OrderRequestEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
