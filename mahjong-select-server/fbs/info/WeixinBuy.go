// automatically generated by the FlatBuffers compiler, do not modify

package info

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type WeixinBuy struct {
	_tab flatbuffers.Table
}

func GetRootAsWeixinBuy(buf []byte, offset flatbuffers.UOffsetT) *WeixinBuy {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &WeixinBuy{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *WeixinBuy) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *WeixinBuy) Appid() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *WeixinBuy) Partnerid() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *WeixinBuy) Prepayid() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *WeixinBuy) Packagestr() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *WeixinBuy) Noncestr() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(12))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *WeixinBuy) Timestamp() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(14))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *WeixinBuy) Sign() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(16))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func WeixinBuyStart(builder *flatbuffers.Builder) {
	builder.StartObject(7)
}
func WeixinBuyAddAppid(builder *flatbuffers.Builder, appid flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(0, flatbuffers.UOffsetT(appid), 0)
}
func WeixinBuyAddPartnerid(builder *flatbuffers.Builder, partnerid flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(partnerid), 0)
}
func WeixinBuyAddPrepayid(builder *flatbuffers.Builder, prepayid flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(prepayid), 0)
}
func WeixinBuyAddPackagestr(builder *flatbuffers.Builder, packagestr flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(3, flatbuffers.UOffsetT(packagestr), 0)
}
func WeixinBuyAddNoncestr(builder *flatbuffers.Builder, noncestr flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(4, flatbuffers.UOffsetT(noncestr), 0)
}
func WeixinBuyAddTimestamp(builder *flatbuffers.Builder, timestamp flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(5, flatbuffers.UOffsetT(timestamp), 0)
}
func WeixinBuyAddSign(builder *flatbuffers.Builder, sign flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(6, flatbuffers.UOffsetT(sign), 0)
}
func WeixinBuyEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
