// automatically generated by the FlatBuffers compiler, do not modify

package info

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type TerminalPlayerInfo struct {
	_tab flatbuffers.Table
}

func GetRootAsTerminalPlayerInfo(buf []byte, offset flatbuffers.UOffsetT) *TerminalPlayerInfo {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &TerminalPlayerInfo{}
	x.Init(buf, n+offset)
	return x
}

func (rcv *TerminalPlayerInfo) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *TerminalPlayerInfo) UserId() uint32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return rcv._tab.GetUint32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *TerminalPlayerInfo) MutateUserId(n uint32) bool {
	return rcv._tab.MutateUint32Slot(4, n)
}

func (rcv *TerminalPlayerInfo) NickName() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(6))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *TerminalPlayerInfo) Icon() []byte {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(8))
	if o != 0 {
		return rcv._tab.ByteVector(o + rcv._tab.Pos)
	}
	return nil
}

func (rcv *TerminalPlayerInfo) Score() int32 {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(10))
	if o != 0 {
		return rcv._tab.GetInt32(o + rcv._tab.Pos)
	}
	return 0
}

func (rcv *TerminalPlayerInfo) MutateScore(n int32) bool {
	return rcv._tab.MutateInt32Slot(10, n)
}

func TerminalPlayerInfoStart(builder *flatbuffers.Builder) {
	builder.StartObject(4)
}
func TerminalPlayerInfoAddUserId(builder *flatbuffers.Builder, userId uint32) {
	builder.PrependUint32Slot(0, userId, 0)
}
func TerminalPlayerInfoAddNickName(builder *flatbuffers.Builder, nickName flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(1, flatbuffers.UOffsetT(nickName), 0)
}
func TerminalPlayerInfoAddIcon(builder *flatbuffers.Builder, icon flatbuffers.UOffsetT) {
	builder.PrependUOffsetTSlot(2, flatbuffers.UOffsetT(icon), 0)
}
func TerminalPlayerInfoAddScore(builder *flatbuffers.Builder, score int32) {
	builder.PrependInt32Slot(3, score, 0)
}
func TerminalPlayerInfoEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
