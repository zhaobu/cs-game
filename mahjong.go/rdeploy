#!/bin/sh
# 项目的上层目录
srcdir="$GOPATH/src"
#项目名称
project="mahjong.go"
#项目路径
projectdir="$srcdir/$project"
#nohup存放目录
nohupDir="/data/mahjong.nohup"

#服务器配置
# 本地环境
# local[0]=2000 # 机器人起始id
# local[1]=5000 # 机器人上限数, 如果此值设置为0, 表示不支持机器人
local=("local" 50000 1000)
aws=("qa" 50000 1000)
qa=("qa" 50000 1000)
product=("product" 50000 40000)

# 获取服务器配置
getServer () {
	eval server=(\${${1}[@]})
	if [ ! -n "$server" ]; then
		echo $"环境未支持: $1"
		exit 2
	fi
}

# 更新代码
pull () {
	cd $projectdir
	echo "git pull --tags"
	git pull --tags
	echo "git checkout [$1]..."
	git checkout $1
	git pull
	cd -
}

# 编译安装
install () {
	cd $projectdir
	# 编译机器人
	echo "go build -o $GOBIN/mahjong.robot.$1"
	go build -o "$GOBIN/mahjong.robot.$1" client/robot/*.go

	cd -
}

# 更新代码并且编译安装
inpull() {
	# 更新代码
	pull $1

	# 编译安装
	install $2
}

#启动新进程
start() {
	cd $projectdir
	
	getServer $2
	
	echo "cd $projectdir"
	cd $projectdir

	# 环境
	env=${server[0]}
	# 初始机器人ID
	robotStartId=${server[1]}
	# 机器人人数
	robotCnt=${server[2]}

	
	echo "启动机器人程序"
	echo "nohup ../../bin/mahjong.robot.$1 -env=$env -f=$robotStartId -c=$robotCnt >> $nohupDir/mahjong.robot.nohup.out.$1 2>&1 &"
	nohup ../../bin/mahjong.robot.$1 -env=$env -f=$robotStartId -c=$robotCnt >> $nohupDir/mahjong.robot.nohup.out.$1 2>&1 &

	echo "机器人程序启动完成..."
	cd -
}

# 关闭进程
stop() {
	getServer $1

	echo "关闭机器人 $1"
	ps -ef | grep "mahjong.robot" | grep "${server[0]}" | grep -v grep |awk '{print $2}' |xargs kill
	echo "进程已关闭"
}

deploy () {
	# 更新代码 pull tag/branch
	pull $1
	# 编译安装 install version
	install $2
	# 关闭旧程序 stop server
	stop $3
	# 开启新服务 start server version
	start $2 $3
}

help () {
	echo "Usage:"
	echo "1. ./rdeploy pull tag/branch, eg: ./deploy pull prod_1.4.2"
	echo "2. ./rdeploy install version, eg: ./deploy install 1.4.2"
	echo "3. ./rdeploy inpull tag/branch version, eg: ./deploy inpull prod_1.4.2 1.4.2"
	echo "4. ./rdeploy stop server, eg: ./deploy stop local"
	echo "5. ./rdeploy start server version, eg: ./deploy start 1.4.2 local"

	echo "Usage:"
	echo "./rdeploy deploy server version tag/branch, eg: ./deploy deploy prod_1.4.2 1.4.3 local"
}

all () {
	ps -ef | grep "mahjong.robot" | grep -v grep
}

case "$1" in 
	help)
		$1
		;;
	start)
		$1 $2 $3
		;;
	stop)
		$1 $2
		;;
	pull)
		$1 $2
		;;
	install)
		$1 $2
		;;
	inpull)
		$1 $2 $3
		;;
	deploy)
		$1 $2 $3 $4
		;;
	all)
		$1
		;;
	*)
	help
	exit 2
esac
